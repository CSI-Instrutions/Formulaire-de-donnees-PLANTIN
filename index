<!DOCTYPE html> 
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulaire de Génération de PDF</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f9f9f9;
            color: #333;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1, h2 {
            color: #333;
            text-align: center;
        }
        .group-title {
            margin-top: 30px;
            font-weight: bold;
            text-align: left;
            border-bottom: 2px solid #333;
            padding-bottom: 10px;
            font-size: 1.2em;
        }
        label {
            display: block;
            margin: 10px 0 5px;
            font-weight: bold;
        }
        input, textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        input.error, textarea.error {
            border-color: red;
        }
        .grid-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Ajusté pour de petites cases */
            gap: 10px;
        }
        .grid-container-2 {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
        }
        button {
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 20px;
        }
        button:hover {
            background-color: #218838;
        }
        table {
            width: 100%;
            margin-top: 10px;
            border-collapse: collapse;
        }
        table, th, td {
            border: 1px solid #ddd;
        }
        th, td {
            padding: 8px;
            text-align: left;
        }
        .add-row-btn, .remove-row-btn {
            background-color: #007bff;
            border: none;
            cursor: pointer;
            padding: 8px;
            color: white;
            border-radius: 3px;
        }
        .remove-row-btn {
            background-color: #dc3545;
        }
        /* Styles pour le modal */
        .modal {
            display: none; /* Caché par défaut */
            position: fixed; /* Reste en place */
            z-index: 1; /* Au-dessus de tout */
            left: 0;
            top: 0;
            width: 100%; /* Pleine largeur */
            height: 100%; /* Pleine hauteur */
            overflow: auto; /* Activation du défilement si nécessaire */
            background-color: rgba(0,0,0,0.4); /* Fond semi-transparent */
        }
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto; /* 15% du haut et centré */
            padding: 20px;
            border: 1px solid #888;
            width: 80%; /* Largeur */
            max-width: 500px;
            border-radius: 8px;
            text-align: center;
            color: red; /* Texte en rouge */
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 24px;
            font-weight: bold;
            cursor: pointer;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
        }
    </style>
</head>
<body>

    <div class="container">
        <h1>Formulaire de saisie des informations</h1>
        
        <!-- Informations Générales -->
        <div class="group-title">Informations Générales</div>
        <div class="grid-container-2">
            <div>
                <label for="operateur">Nom de l'opérateur:</label>
                <input type="text" id="operateur" name="operateur" required>
            </div>
            <div>
                <label for="numero_of">Numéro OF:</label>
                <input type="text" id="numero_of" name="numero_of" required>
            </div>
            <div>
                <label for="numero_produit">Numéro du produit:</label>
                <input type="text" id="numero_produit" name="numero_produit" required>
            </div>
        </div>

        <!-- Cuve utilisée -->
        <div class="group-title">Cuve utilisée</div>
        <label for="cuve">Cuve utilisée:</label>
        <input type="text" id="cuve" name="cuve" required>
        <label for="debut">Date et heure début fabrication:</label>
        <input type="datetime-local" id="debut" name="debut" required>
        <label for="fin">Date et heure fin fabrication:</label>
        <input type="datetime-local" id="fin" name="fin" required>
        <label for="niveau_cuve_fin">Niveau de la cuve à la fin (en l):</label>
        <input type="number" id="niveau_cuve_fin" name="niveau_cuve_fin" required>

        <!-- Résumé de fabrication -->
        <div class="group-title">Résumé de fabrication</div>
        <div class="grid-container">
            <div>
                <label for="volume_mp">Volume MP (en l):</label>
                <input type="number" id="volume_mp" name="volume_mp" required>
            </div>
            <div>
                <label for="volume_eau">Volume EAU (en l):</label>
                <input type="number" id="volume_eau" name="volume_eau" required>
            </div>
            <div>
                <label for="volume_lessive">Volume LESSIVE DE POTASSE (en l):</label>
                <input type="number" id="volume_lessive" name="volume_lessive" required>
            </div>
            <div>
                <label for="volume_acide_nitrique">Volume ACIDE NITRIQUE (en l):</label>
                <input type="number" id="volume_acide_nitrique" name="volume_acide_nitrique" required>
            </div>
            <div>
                <label for="volume_acide_phosphorique">Volume ACIDE PHOSPHORIQUE (en l):</label>
                <input type="number" id="volume_acide_phosphorique" name="volume_acide_phosphorique" required>
            </div>
            <div>
                <label for="volume_chlorure">Volume CHLORURE FERRIQUE (en l):</label>
                <input type="number" id="volume_chlorure" name="volume_chlorure" required>
            </div>
            <div>
                <label for="volume_dpta">Volume DPTA LIQUIDE (en l):</label>
                <input type="number" id="volume_dpta" name="volume_dpta" required>
            </div>
            <div>
                <label for="volume_caplant">Volume CAPLANT (en l):</label>
                <input type="number" id="volume_caplant" name="volume_caplant" required>
            </div>
            <div>
                <label for="volume_plantimag">Volume PLANTIMAG (en l):</label>
                <input type="number" id="volume_plantimag" name="volume_plantimag" required>
            </div>
            <div>
                <label for="volume_vinasse">Volume VINASSE DE BETTERAVE (en l):</label>
                <input type="number" id="volume_vinasse" name="volume_vinasse" required>
            </div>
        </div>

        <!-- Trémie Peseuse -->
        <div class="group-title">Trémie Peseuse</div>
        <label for="tremie">Nom de la Trémie:</label>
        <input type="text" id="tremie" name="tremie" required>
        <label for="tremie_matiere">Nom matière:</label>
        <input type="text" id="tremie_matiere" name="tremie_matiere" required>
        <label for="tremie_volume">Volume extrait (en kg):</label>
        <input type="number" id="tremie_volume" name="tremie_volume" required>

        <!-- SDI -->
        <div class="group-title">SDI</div>
        <label for="sdi">SDI:</label>
        <input type="text" id="sdi" name="sdi" required>
        <label for="sdi_matiere">Nom matière:</label>
        <input type="text" id="sdi_matiere" name="sdi_matiere" required>
        <label for="sdi_volume">Volume extrait (en l):</label>
        <input type="number" id="sdi_volume" name="sdi_volume" required>

        <!-- Densité, Conductivité, pH -->
        <div class="group-title">Densité, Conductivité et pH (Min, Max et Vmes)</div>
        <div class="grid-container">
            <div>
                <label for="densite_min">Densité Min:</label>
                <input type="number" step="0.01" id="densite_min" name="densite_min" required>
            </div>
            <div>
                <label for="densite_max">Densité Max:</label>
                <input type="number" step="0.01" id="densite_max" name="densite_max" required>
            </div>
            <div>
                <label for="densite_vmes">Densité Vmes:</label>
                <input type="number" step="0.01" id="densite_vmes" name="densite_vmes" required>
            </div>
            <div>
                <label for="conductivite">Conductivité (en mS):</label>
                <input type="number" step="0.01" id="conductivite" name="conductivite" required>
            </div>
            <div>
                <label for="conductivite_vmes">Conductivité Vmes (en mS):</label>
                <input type="number" step="0.01" id="conductivite_vmes" name="conductivite_vmes" required>
            </div>
            <div>
                <label for="ph_min">pH Min:</label>
                <input type="number" step="0.01" id="ph_min" name="ph_min" required>
            </div>
            <div>
                <label for="ph_max">pH Max:</label>
                <input type="number" step="0.01" id="ph_max" name="ph_max" required>
            </div>
            <div>
                <label for="ph_vmes">pH Vmes:</label>
                <input type="number" step="0.01" id="ph_vmes" name="ph_vmes" required>
            </div>
        </div>

        <!-- Incorporation MP Solide -->
        <div class="group-title">Incorporation MP SOLIDE</div>
        <table id="mp-solide-table">
            <thead>
                <tr>
                    <th>Code Matière</th>
                    <th>N° Produit</th>
                    <th>Quantité ajoutée (kg)</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><input type="text" name="code_matiere[]" required></td>
                    <td><input type="text" name="num_produit[]" required></td>
                    <td><input type="number" step="0.01" name="quantite_ajoutee[]" class="quantite" required></td>
                    <td><button type="button" class="remove-row-btn" onclick="removeRow(this)">Supprimer</button></td>
                </tr>
            </tbody>
        </table>
        <button type="button" class="add-row-btn" onclick="addRow()">Ajouter une ligne</button>
        <div>
            <strong>Total (kg):</strong> <span id="total-quantite">0</span>
        </div>

        <!-- Validation Labo -->
        <div class="group-title">Validation Labo</div>
        <table id="validation-labo-table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Heure</th>
                    <th>Contrôle effectué</th>
                    <th>Valeur mesurée</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><input type="date" name="date_controle[]" required></td>
                    <td><input type="time" name="heure_controle[]" required></td>
                    <td><input type="text" name="controle_effectue[]" required></td>
                    <td><input type="number" step="0.01" name="valeur_mesuree[]" required></td>
                    <td><button type="button" class="remove-row-btn" onclick="removeRow(this)">Supprimer</button></td>
                </tr>
            </tbody>
        </table>
        <button type="button" class="add-row-btn" onclick="addRowValidation()">Ajouter une ligne</button>

        <button type="button" onclick="handleSubmit()">Envoyer</button>
    </div>

    <!-- Modal pour afficher les erreurs -->
    <div id="errorModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <p id="errorMessage"></p>
        </div>
    </div>

    <!-- Inclusion de la bibliothèque jsPDF pour générer le PDF -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script>
        // Fonction pour ajouter une ligne dans le tableau "Incorporation MP SOLIDE"
        function addRow() {
            const table = document.getElementById('mp-solide-table').getElementsByTagName('tbody')[0];
            const newRow = table.insertRow();
            newRow.innerHTML = `
                <td><input type="text" name="code_matiere[]" required></td>
                <td><input type="text" name="num_produit[]" required></td>
                <td><input type="number" step="0.01" name="quantite_ajoutee[]" class="quantite" required></td>
                <td><button type="button" class="remove-row-btn" onclick="removeRow(this)">Supprimer</button></td>
            `;
            updateTotal();
            attachQuantityListener(newRow.querySelector('.quantite'));
        }

        // Fonction pour ajouter une ligne dans le tableau "Validation Labo"
        function addRowValidation() {
            const table = document.getElementById('validation-labo-table').getElementsByTagName('tbody')[0];
            const newRow = table.insertRow();
            newRow.innerHTML = `
                <td><input type="date" name="date_controle[]" required></td>
                <td><input type="time" name="heure_controle[]" required></td>
                <td><input type="text" name="controle_effectue[]" required></td>
                <td><input type="number" step="0.01" name="valeur_mesuree[]" required></td>
                <td><button type="button" class="remove-row-btn" onclick="removeRow(this)">Supprimer</button></td>
            `;
        }

        // Fonction pour supprimer une ligne du tableau
        function removeRow(button) {
            const row = button.parentElement.parentElement;
            row.remove();
            updateTotal();
        }

        // Fonction pour mettre à jour le total des quantités ajoutées
        function updateTotal() {
            let total = 0;
            const quantities = document.querySelectorAll('.quantite');
            quantities.forEach(q => {
                total += parseFloat(q.value) || 0;
            });
            document.getElementById('total-quantite').innerText = total.toFixed(2);
        }

        // Fonction pour attacher l'écouteur d'événement aux nouvelles quantités ajoutées
        function attachQuantityListener(input) {
            input.addEventListener('input', updateTotal);
        }

        // Attacher les écouteurs aux quantités initiales
        document.querySelectorAll('.quantite').forEach(input => {
            input.addEventListener('input', updateTotal);
        });

        // Fonction pour fermer le modal
        function closeModal() {
            document.getElementById('errorModal').style.display = "none";
        }

        // Fonction de validation du formulaire
        function validateForm() {
            let isValid = true;
            let missingFields = [];

            // Réinitialiser les styles d'erreur
            document.querySelectorAll('input, textarea').forEach(field => {
                field.classList.remove('error');
            });

            // Sélectionner tous les éléments requis
            const requiredFields = document.querySelectorAll('input[required], textarea[required]');

            requiredFields.forEach(field => {
                if (!field.value.trim()) {
                    isValid = false;
                    // Ajouter le nom du champ manquant
                    const label = document.querySelector(`label[for="${field.id}"]`);
                    const fieldName = label ? label.innerText.replace(':', '') : 'Champ manquant';
                    missingFields.push(fieldName);
                    // Mettre en évidence le champ manquant
                    field.classList.add('error');
                }
            });

            if (!isValid) {
                // Afficher le message d'erreur dans le modal
                const errorMessage = `Veuillez remplir les champs suivants :\n- ${missingFields.join('\n- ')}`;
                document.getElementById('errorMessage').innerText = errorMessage;
                document.getElementById('errorModal').style.display = "block";
            }

            return isValid;
        }

        // Fonction pour gérer la soumission du formulaire
        function handleSubmit() {
            if (validateForm()) {
                generatePDF();
            }
        }

        // Fonction pour générer le PDF
        function generatePDF() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            let yPosition = 10;

            // Title with background
            doc.setFillColor(230, 230, 230); // Light gray background
            doc.rect(10, yPosition - 7, 190, 8, 'F'); // Rectangle behind title
            doc.setFontSize(18);
            doc.setFont("helvetica", "bold");
            doc.text("Informations de Fabrication", 105, yPosition, null, null, 'center');
            yPosition += 10;

            doc.setFontSize(14);
            // Informations Générales
            addSectionTitle(doc, "Informations Générales", yPosition);
            yPosition += 8;
            doc.setFont("helvetica", "normal");
            doc.text(`Nom de l'opérateur: ${document.getElementById('operateur').value}`, 10, yPosition);
            yPosition += 7;
            doc.text(`Numéro OF: ${document.getElementById('numero_of').value}`, 10, yPosition);
            yPosition += 7;
            doc.text(`Numéro du produit: ${document.getElementById('numero_produit').value}`, 10, yPosition);
            yPosition += 10;

            // Cuve utilisée
            addSectionTitle(doc, "Cuve utilisée", yPosition);
            yPosition += 8;
            doc.setFont("helvetica", "normal");
            doc.text(`Cuve utilisée: ${document.getElementById('cuve').value}`, 10, yPosition);
            yPosition += 7;
            doc.text(`Début fabrication: ${document.getElementById('debut').value}`, 10, yPosition);
            yPosition += 7;
            doc.text(`Fin fabrication: ${document.getElementById('fin').value}`, 10, yPosition);
            yPosition += 7;
            doc.text(`Niveau de la cuve à la fin: ${document.getElementById('niveau_cuve_fin').value} l`, 10, yPosition);
            yPosition += 10;

            // Résumé de fabrication
            addSectionTitle(doc, "Résumé de fabrication", yPosition);
            yPosition += 8;
            doc.setFont("helvetica", "normal");
            const resumeFields = [
                { label: 'Volume MP (en l)', value: document.getElementById('volume_mp').value },
                { label: 'Volume EAU (en l)', value: document.getElementById('volume_eau').value },
                { label: 'Volume LESSIVE DE POTASSE (en l)', value: document.getElementById('volume_lessive').value },
                { label: 'Volume ACIDE NITRIQUE (en l)', value: document.getElementById('volume_acide_nitrique').value },
                { label: 'Volume ACIDE PHOSPHORIQUE (en l)', value: document.getElementById('volume_acide_phosphorique').value },
                { label: 'Volume CHLORURE FERRIQUE (en l)', value: document.getElementById('volume_chlorure').value },
                { label: 'Volume DPTA LIQUIDE (en l)', value: document.getElementById('volume_dpta').value },
                { label: 'Volume CAPLANT (en l)', value: document.getElementById('volume_caplant').value },
                { label: 'Volume PLANTIMAG (en l)', value: document.getElementById('volume_plantimag').value },
                { label: 'Volume VINASSE DE BETTERAVE (en l)', value: document.getElementById('volume_vinasse').value }
            ];

            resumeFields.forEach(field => {
                // Split the text if it's too long
                const splitLabel = doc.splitTextToSize(`${field.label}: ${field.value} l`, 180);
                doc.text(splitLabel, 10, yPosition);
                yPosition += 7 * splitLabel.length;
            });
            yPosition += 3;

            // Trémie Peseuse
            addSectionTitle(doc, "Trémie Peseuse", yPosition);
            yPosition += 8;
            doc.setFont("helvetica", "normal");
            doc.text(`Nom de la Trémie: ${document.getElementById('tremie').value}`, 10, yPosition);
            yPosition += 7;
            doc.text(`Nom matière: ${document.getElementById('tremie_matiere').value}`, 10, yPosition);
            yPosition += 7;
            doc.text(`Volume extrait: ${document.getElementById('tremie_volume').value} kg`, 10, yPosition);
            yPosition += 10;

            // SDI
            addSectionTitle(doc, "SDI", yPosition);
            yPosition += 8;
            doc.setFont("helvetica", "normal");
            doc.text(`SDI: ${document.getElementById('sdi').value}`, 10, yPosition);
            yPosition += 7;
            doc.text(`Nom matière: ${document.getElementById('sdi_matiere').value}`, 10, yPosition);
            yPosition += 7;
            doc.text(`Volume extrait: ${document.getElementById('sdi_volume').value} l`, 10, yPosition);
            yPosition += 10;

            // Densité, Conductivité, pH
            addSectionTitle(doc, "Densité, Conductivité et pH", yPosition);
            yPosition += 8;
            doc.setFont("helvetica", "normal");
            const densiteConductivitePHFields = [
                { label: 'Densité Min', value: document.getElementById('densite_min').value },
                { label: 'Densité Max', value: document.getElementById('densite_max').value },
                { label: 'Densité Vmes', value: document.getElementById('densite_vmes').value },
                { label: 'Conductivité (mS)', value: document.getElementById('conductivite').value },
                { label: 'Conductivité Vmes (mS)', value: document.getElementById('conductivite_vmes').value },
                { label: 'pH Min', value: document.getElementById('ph_min').value },
                { label: 'pH Max', value: document.getElementById('ph_max').value },
                { label: 'pH Vmes', value: document.getElementById('ph_vmes').value }
            ];

            densiteConductivitePHFields.forEach(field => {
                const splitLabel = doc.splitTextToSize(`${field.label}: ${field.value}`, 180);
                doc.text(splitLabel, 10, yPosition);
                yPosition += 7 * splitLabel.length;
            });
            yPosition += 3;

            // Incorporation MP Solide
            addSectionTitle(doc, "Incorporation MP SOLIDE", yPosition);
            yPosition += 8;
            doc.setFont("helvetica", "normal");
            const mpTable = document.getElementById('mp-solide-table');
            const mpRows = mpTable.querySelectorAll('tbody tr');
            let mpContent = "";
            mpRows.forEach((row, index) => {
                const cells = row.querySelectorAll('td input');
                mpContent += `Ligne ${index + 1} - Code Matière: ${cells[0].value}, N° Produit: ${cells[1].value}, Quantité ajoutée: ${cells[2].value} kg\n`;
            });
            // Gestion de la longueur du texte et pagination si nécessaire
            const splitMpContent = doc.splitTextToSize(mpContent, 180);
            doc.text(splitMpContent, 10, yPosition);
            yPosition += 7 * splitMpContent.length + 3;

            // Total Quantité
            doc.setFont("helvetica", "bold");
            doc.text(`Total Quantité ajoutée (kg): ${document.getElementById('total-quantite').innerText}`, 10, yPosition);
            yPosition += 10;

            // Validation Labo
            addSectionTitle(doc, "Validation Labo", yPosition);
            yPosition += 8;
            doc.setFont("helvetica", "normal");
            const validationTable = document.getElementById('validation-labo-table');
            const validationRows = validationTable.querySelectorAll('tbody tr');
            let validationContent = "";
            validationRows.forEach((row, index) => {
                const cells = row.querySelectorAll('td input');
                validationContent += `Ligne ${index + 1} - Date: ${cells[0].value}, Heure: ${cells[1].value}, Contrôle effectué: ${cells[2].value}, Valeur mesurée: ${cells[3].value}\n`;
            });
            const splitValidationContent = doc.splitTextToSize(validationContent, 180);
            doc.text(splitValidationContent, 10, yPosition);
            yPosition += 7 * splitValidationContent.length + 3;

            // Télécharger le PDF
            doc.save('informations_fabrication.pdf');
        }

        // Fonction pour ajouter un titre de section avec un fond coloré
        function addSectionTitle(doc, title, yPos) {
            doc.setFillColor(200, 200, 200); // Light gray background
            doc.rect(10, yPos - 7, 190, 8, 'F'); // Rectangle derrière le titre
            doc.setFontSize(14);
            doc.setFont("helvetica", "bold");
            doc.text(title, 10, yPos);
        }

        // Fermer le modal si l'utilisateur clique en dehors de lui
        window.onclick = function(event) {
            const modal = document.getElementById('errorModal');
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    </script>

</body>
</html>
